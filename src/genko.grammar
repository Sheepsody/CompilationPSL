////////////
// Lexing //
////////////

cons = { pi }
     pi = @{ "PI" }

uint = { ASCII_DIGIT+ }
int = { ("-" | "+")? ~ uint }
num = @{ int ~ ("." ~ uint)? ~ ("e" ~ int)? }

bool = @{ "true" | "false" }

operator = _{ add | sub | mul | div | pow | eq | le | ge | lt | gt | and | or}
    add      = @{ "+" }
    sub = @{ "-" }
    mul = @{ "*" }
    div   = @{ "/" }
    pow    = @{ "^" }
    eq     = @{ "==" }
    le     = @{ "<=" }
    ge     = @{ ">=" }
    lt     = @{ "<" }
    gt     = @{ ">" }
    and     = @{ "&&" }
    or     = @{ "||" }

function = _{ cos }
    cos      = @{ "cos" }

ident = @{ ASCII_ALPHA+ }


/////////////
// Parsing //
/////////////

init = { ident ~ ":=" ~ expr }

binaryexpr = { term ~ (operator ~ term)*}
unaryexpr = { operator ~ term }
call = { function ~ "(" ~ expr ~ ")" }

term = _{ num | bool | cons | "(" ~ expr ~ ")" | call | ident } // Warning! ident at the end
expr = _{ binaryexpr | unaryexpr | call }


line = _{ init | expr }
program = _{ SOI ~ line ~ (";" ~ line)* ~ ";"? ~ EOI }

// Implicit whitespace & comment

WHITESPACE = _{ " " | "\t" | "\n" }
COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }
